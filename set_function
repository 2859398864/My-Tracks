//（1）正常
#include<iostream>
#include<set>
using namespace std;
int main() {
	//不允许重复 
	//键和值是同一个元素 
	set<int> s;
	s.insert(1);
	s.insert(3);
	s.insert(6);
	//s.erase(6);  //删除 
	//s.size();
	//s.clear();
	//s.empty();
	// STL中区间是左闭右开，end()函数返回迭代器即指向集合中最大元素下一位置迭代器
        //--s.end()最大元素迭代器
        //最大值 ： maxn = *(--s.end());
	set<int>::iterator it; //定义前向迭代器
	for(it = s.begin(); it != s.end(); it++)  cout << *it << " ";
	
	cout << endl;
	
	set<int>::reverse_iterator rit; //定义反向迭代器
	for(rit = s.rbegin(); rit != s.rend(); rit++) cout << *rit << " ";
	
	set<int>::iterator it;
	it = s.find(6); //查找键值为6的元素
	if(it != s.end())  cout << *it << endl;
	return 0;
}

/*
struct cmp { //自定义比较函数
	bool operator() (const int &a, const int &b) { //从大到小 
		if(a != b) return a > b;
		else       return a > b;
	}
};
set<int, cmp> num; 
*/

//（3）结构体

#include<iostream>
#include<set>
#include<string>
using namespace std;
struct stu {
	int math;
	double score;
};
bool operator < (const stu &a, const stu &b) {
		if(a.math == b.math) {    //按第一关键字：数学 由大到小 
			return a.score > b.score;
		}
		return a.math > b.math;
}
int main() {
	set<stu> s;
	stu a;
 
	a.math = 1;
	a.score = 2;
	s.insert(a);
	
	a.math = 3;
	a.score = 3;
	s.insert(a);
	
	a.math = 1;
	a.score = 4;
	s.insert(a);
	
	set<stu>::iterator it;
	for(it = s.begin(); it != s.end(); it++)
		cout << (*it).math << " " << (*it).score << endl; 
	return 0;
}
